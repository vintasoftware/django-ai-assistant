// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { DjangoAiAssistantListAssistantsResponse, DjangoAiAssistantGetAssistantData, DjangoAiAssistantGetAssistantResponse, DjangoAiAssistantListThreadsResponse, DjangoAiAssistantCreateThreadData, DjangoAiAssistantCreateThreadResponse, DjangoAiAssistantGetThreadData, DjangoAiAssistantGetThreadResponse, DjangoAiAssistantUpdateThreadData, DjangoAiAssistantUpdateThreadResponse, DjangoAiAssistantDeleteThreadData, DjangoAiAssistantDeleteThreadResponse, DjangoAiAssistantListThreadMessagesData, DjangoAiAssistantListThreadMessagesResponse, DjangoAiAssistantCreateThreadMessageData, DjangoAiAssistantCreateThreadMessageResponse, DjangoAiAssistantDeleteThreadMessageData, DjangoAiAssistantDeleteThreadMessageResponse } from './types.gen';

/**
 * List Assistants
 * @returns AssistantSchema OK
 * @throws ApiError
 */
export const djangoAiAssistantListAssistants = (): CancelablePromise<DjangoAiAssistantListAssistantsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/assistants/'
}); };

/**
 * Get Assistant
 * @param data The data for the request.
 * @param data.assistantId
 * @returns AssistantSchema OK
 * @throws ApiError
 */
export const djangoAiAssistantGetAssistant = (data: DjangoAiAssistantGetAssistantData): CancelablePromise<DjangoAiAssistantGetAssistantResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/assistants/{assistant_id}/',
    path: {
        assistant_id: data.assistantId
    }
}); };

/**
 * List Threads
 * @returns ThreadSchema OK
 * @throws ApiError
 */
export const djangoAiAssistantListThreads = (): CancelablePromise<DjangoAiAssistantListThreadsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/threads/'
}); };

/**
 * Create Thread
 * @param data The data for the request.
 * @param data.requestBody
 * @returns ThreadSchema OK
 * @throws ApiError
 */
export const djangoAiAssistantCreateThread = (data: DjangoAiAssistantCreateThreadData): CancelablePromise<DjangoAiAssistantCreateThreadResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/threads/',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get Thread
 * @param data The data for the request.
 * @param data.threadId
 * @returns ThreadSchema OK
 * @throws ApiError
 */
export const djangoAiAssistantGetThread = (data: DjangoAiAssistantGetThreadData): CancelablePromise<DjangoAiAssistantGetThreadResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/threads/{thread_id}/',
    path: {
        thread_id: data.threadId
    }
}); };

/**
 * Update Thread
 * @param data The data for the request.
 * @param data.threadId
 * @param data.requestBody
 * @returns ThreadSchema OK
 * @throws ApiError
 */
export const djangoAiAssistantUpdateThread = (data: DjangoAiAssistantUpdateThreadData): CancelablePromise<DjangoAiAssistantUpdateThreadResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/threads/{thread_id}/',
    path: {
        thread_id: data.threadId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete Thread
 * @param data The data for the request.
 * @param data.threadId
 * @returns void No Content
 * @throws ApiError
 */
export const djangoAiAssistantDeleteThread = (data: DjangoAiAssistantDeleteThreadData): CancelablePromise<DjangoAiAssistantDeleteThreadResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/threads/{thread_id}/',
    path: {
        thread_id: data.threadId
    }
}); };

/**
 * List Thread Messages
 * @param data The data for the request.
 * @param data.threadId
 * @returns ThreadMessagesSchemaOut OK
 * @throws ApiError
 */
export const djangoAiAssistantListThreadMessages = (data: DjangoAiAssistantListThreadMessagesData): CancelablePromise<DjangoAiAssistantListThreadMessagesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/threads/{thread_id}/messages/',
    path: {
        thread_id: data.threadId
    }
}); };

/**
 * Create Thread Message
 * @param data The data for the request.
 * @param data.threadId
 * @param data.requestBody
 * @returns unknown Created
 * @throws ApiError
 */
export const djangoAiAssistantCreateThreadMessage = (data: DjangoAiAssistantCreateThreadMessageData): CancelablePromise<DjangoAiAssistantCreateThreadMessageResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/threads/{thread_id}/messages/',
    path: {
        thread_id: data.threadId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete Thread Message
 * @param data The data for the request.
 * @param data.threadId
 * @param data.messageId
 * @returns void No Content
 * @throws ApiError
 */
export const djangoAiAssistantDeleteThreadMessage = (data: DjangoAiAssistantDeleteThreadMessageData): CancelablePromise<DjangoAiAssistantDeleteThreadMessageResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/threads/{thread_id}/messages/{message_id}/',
    path: {
        thread_id: data.threadId,
        message_id: data.messageId
    }
}); };